[package]
name = "swissarmyhammer"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
description = "A flexible prompt management library for AI assistants"
documentation = "https://docs.rs/swissarmyhammer"
readme = "../README.md"
keywords = ["prompt", "template", "ai", "assistant", "liquid"]
categories = ["template-engine", "development-tools"]

[lints]
workspace = true

[build-dependencies]
# None needed for build script

[dependencies]
# Core dependencies
tokio = { workspace = true }
serde = { workspace = true }
serde_yaml = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
thiserror = "1.0"
async-trait = "0.1"

# Template engine
liquid = { workspace = true }
liquid-core = { version = "0.26" }

# File system
walkdir = { workspace = true }
notify = { workspace = true }
glob = { workspace = true }
ignore = { workspace = true }
tempfile = { workspace = true }

# Data structures
dashmap = { workspace = true }
regex = { workspace = true }
chrono = { workspace = true }
ulid = { version = "1.2.1", features = ["serde"] }
toml = "0.9.5"

# Search functionality
tantivy = { workspace = true }
fuzzy-matcher = { workspace = true }

# Semantic search dependencies
# mistralrs = { workspace = true } # Disabled - doesn't support embeddings
ort = { workspace = true, optional = true }
tokenizers = { workspace = true, optional = true }
hf-hub = { workspace = true, optional = true }
ndarray = { workspace = true, optional = true }
fastembed = { version = "5.0.0", optional = true } # Latest version - attempting to resolve previous version conflicts
duckdb = { workspace = true, optional = true }
tree-sitter = { workspace = true }
tree-sitter-rust = { workspace = true }
tree-sitter-python = { workspace = true }
tree-sitter-typescript = { workspace = true }
tree-sitter-javascript = { workspace = true }
tree-sitter-dart = { workspace = true }
md5 = { workspace = true }

# MCP support
rmcp = { workspace = true }
schemars = { version = "0.8" }
dirs = { workspace = true }

# Mermaid parsing
mermaid-parser = { git = "https://github.com/wballard/mermaid_parser" }

# CEL expression evaluation
cel-interpreter = "0.8"

# Parser combinator library for action parsing
chumsky = "0.10.1"

# Performance optimizations
lru = "0.12"
zstd = "0.13"
memmap2 = "0.9"
rayon = "1.8"
base64 = "0.22"
which = "8.0.0"

# Syntax highlighting
syntect = { workspace = true }

# HTTP client for API calls
reqwest = { workspace = true }

# Progress bars and user interface
indicatif = { workspace = true }

# CLI argument parsing
clap = { workspace = true }
dialoguer = { workspace = true }
is-terminal = { workspace = true }


[features]
default = ["semantic-search"]
semantic-search = [
    "ort",
    "tokenizers",
    "hf-hub",
    "ndarray",
    "fastembed",
    "duckdb",
]
fast-tests = []
test-utils = []

[dev-dependencies]
tempfile = { workspace = true }
proptest = { workspace = true }
criterion = { workspace = true }
serial_test = { workspace = true }
futures = "0.3"
swissarmyhammer-tools = { path = "../swissarmyhammer-tools" }

[lib]
name = "swissarmyhammer"
path = "src/lib.rs"

# Benchmark configuration
[[bench]]
name = "benchmarks"
harness = false
path = "../benches/benchmarks.rs"

[[bench]]
name = "issue_performance"
harness = false
path = "../benches/issue_performance.rs"

[[bench]]
name = "memo_benchmarks"
harness = false
path = "../benches/memo_benchmarks.rs"
